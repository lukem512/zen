extends ../layout

block content
	h1= schedule.title

	script.
		window.__id = '#{schedule.id}';
		window.__start_time = '#{schedule.start_time}';
		window.__past = #{past};
		window.__ongoing = #{ongoing};
		window.__soon = #{soon};
		window.__schedule = !{JSON.stringify(schedule)};

	script(src='/javascripts/ui/generic.js')
	script(src='/javascripts/ui/schedules.js')
	script(src='/javascripts/ui/calendar.js')

	if schedule.deleted
		p.text-danger This resource has been deleted.

	p
		a#user.text-capitalize(href="/users/#{schedule.owner}")
			if schedule.owner != user.username
				| #{schedule.owner} 
			else
				| you 
		if (new Date() - schedule.start_time) < 0
			if schedule.owner != user.username
				| has 
			else
				| have 
		| #{dictionary.schedule.verb.past} a #{dictionary.action.noun.plural} session from 
		a#startDate(href="#") #{moment(schedule.start_time).calendar()}
		|  for 
		a#endDate(href="#") #{moment.duration(moment(schedule.start_time).diff(schedule.end_time)).humanize()}
		| . 
	if schedule.description
		p
			| &ldquo;
			em= schedule.description
			| &rdquo;
	p#pledges
	p#now.hidden

	hr

	p#created.small This #{dictionary.schedule.noun.singular} was created on #{moment(schedule.createdAt).format('Do MMMM YYYY')} at #{moment(schedule.createdAt).format('h:mm A')}.
	
	bre

	#message.hidden
	#buttons
		if (ongoing)
			button#btnFulfil.btn.btn-success.text-capitalize.hidden(type="button", onclick="fulfil()")
				i.fa.fa-hourglass-half
				| &nbsp; #{dictionary.action.verb.present} now
			| &nbsp;
		if (past)
			button#btnLog.btn.btn-success.text-capitalize.hidden(type="button", onclick="log()")
				i.fa.fa-file-o
				| &nbsp; Log #{dictionary.action.noun.singular}
			| &nbsp;
		if (schedule.owner != user.username) && !past
			button#btnJoin.btn.btn-success(type="button", onclick="join(window.location, '#{schedule.id}')")
				i.fa.fa-calendar-check-o
				| &nbsp; Join
			button#btnLeave.btn.btn-warning.hidden(type="button", onclick="leave(window.location, '#{schedule.id}')")
				i.fa.fa-calendar-times-o
				| &nbsp; Leave
			| &nbsp;
		if ((schedule.owner == user.username) && !past && !ongoing) || user.admin
			button#btnEdit.btn.btn-primary(type="button", onclick="window.location='/#{dictionary.schedule.noun.plural}/edit/#{schedule.id}'")
				i.fa.fa-pencil
				| &nbsp; Edit
			| &nbsp;
			if !schedule.deleted
				button#btnDelete.btn.btn-danger(type="button", onclick="del('/#{dictionary.schedule.noun.plural}', '#{schedule.id}')")
					i.fa.fa-remove
					| &nbsp; Delete
		if (schedule.owner == user.username) || user.admin
			| &nbsp;
			button#btnDuplicate.btn.btn-warning(type="button", onclick="duplicate()")
				i.fa.fa-copy
				| &nbsp; Duplicate
		script.
			
			$(function() {
				var startDate = moment('#{schedule.start_time}');
				$('#startDate').attr('href', '/#{dictionary.schedule.noun.plural}?date=' + startDate.format('DD-MM-YYYY') + '&view=day');
				$('#startDate').text(startDate.calendar());

				var __id = window.__id || false;
				if (__id) {
					pledgedUsers(__id, function(pledged) {
						if (window.__past || window.__ongoing) {
							fulfilledUsers(__id, function(fulfilled) {
								if (fulfilled.message) {
									return console.error(fulfilled.message);
								};
								var present = fulfilled.map(function(i) {return i.username});
								var absent = pledged.filter(function(i) {return present.indexOf(i) < 0;});
								displayPledgesPast(absent, present);
							});
						}
						else {
							displayPledgesFuture(pledged);
						}
					});
				};
			});
